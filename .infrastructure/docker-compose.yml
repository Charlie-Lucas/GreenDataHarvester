version: '3.8'

services:
  app:
    build:
      context: ..
      dockerfile: .infrastructure/Dockerfile.app
    container_name: greendataharvester-app
    ports:
      - "3000:3000"
      - "9090:9090"
    environment:
      - NODE_ENV=production
      - MONGO_URL=mongodb://mongo:27017/greendataharvester
      - REDIS_URL=redis://redis:6379
      - SESSION_SECRET=${SESSION_SECRET}
      - INSEE_API_TOKEN=${INSEE_API_TOKEN}
    depends_on:
      - mongo
      - redis
    volumes:
      - ../logs:/app/logs
      - ../config:/app/config
    networks:
      - greendataharvester-network
    restart: unless-stopped

  mongo:
    build:
      context: .
      dockerfile: Dockerfile.db
    container_name: greendataharvester-mongo
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME:-admin}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD:-password}
      - MONGO_INITDB_DATABASE=greendataharvester
    volumes:
      - mongo_data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d
    networks:
      - greendataharvester-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: greendataharvester-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-}
    volumes:
      - redis_data:/data
    networks:
      - greendataharvester-network
    restart: unless-stopped

  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    container_name: greendataharvester-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ../client/dist:/usr/share/nginx/html
    depends_on:
      - app
    networks:
      - greendataharvester-network
    restart: unless-stopped

  monitoring:
    image: prom/prometheus:latest
    container_name: greendataharvester-prometheus
    ports:
      - "9091:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - greendataharvester-network
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: greendataharvester-grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - monitoring
    networks:
      - greendataharvester-network
    restart: unless-stopped

volumes:
  mongo_data:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  greendataharvester-network:
    driver: bridge

